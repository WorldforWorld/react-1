{"version":3,"file":"static/js/818.0b1522f8.chunk.js","mappings":"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","sources":["pages/Chat/ChatPage.tsx","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  sendMessage,\r\n  startMessagesListening,\r\n  stopMessagesListening,\r\n} from \"../../redux/chat-reduser\";\r\nimport { AppDispatch, AppStateType } from \"../../redux/redux-store\";\r\n\r\nexport type ChatMessageType = {\r\n  message: string;\r\n  photo: string;\r\n  userId: number;\r\n  userName: string;\r\n};\r\nconst ChatPage: React.FC = () => {\r\n  return (\r\n    <div>\r\n      <Chat />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Chat: React.FC = () => {\r\n  const dispatch: AppDispatch = useDispatch();\r\n\r\n  const status = useSelector((state: AppStateType) => state.chat.status);\r\n\r\n  useEffect(() => {\r\n    dispatch(startMessagesListening());\r\n    return () => {\r\n      dispatch(stopMessagesListening());\r\n    };\r\n  }, []);\r\n  return (\r\n    <div>\r\n      {status === \"error\" && (\r\n        <div>Some error occured. Please refresh the page</div>\r\n      )}\r\n      <Messages />\r\n      <AddMessageForm />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Messages: React.FC<{}> = ({}) => {\r\n  const messages = useSelector((state: AppStateType) => state.chat.messages);\r\n\r\n  const messagesAncorRef = useRef<HTMLDivElement>(null);\r\n  const [isAutoScroll, setIsAutoScroll] = useState(true);\r\n\r\n  const scrollHandler = (e: React.UIEvent<HTMLDivElement, UIEvent>) => {\r\n    const element = e.currentTarget;\r\n    if (\r\n      Math.abs(\r\n        element.scrollHeight - element.scrollTop - element.clientHeight\r\n      ) < 300\r\n    ) {\r\n      !isAutoScroll && setIsAutoScroll(true);\r\n    } else {\r\n      isAutoScroll && setIsAutoScroll(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isAutoScroll) {\r\n      messagesAncorRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  }, [messages]);\r\n  return (\r\n    <div\r\n      style={{ height: \"400px\", overflowY: \"auto\" }}\r\n      onScroll={scrollHandler}\r\n    >\r\n      {messages.map((m, index) => (\r\n        <Message key={m.id} message={m} />\r\n      ))}\r\n      <div ref={messagesAncorRef}></div>\r\n    </div>\r\n  );\r\n};\r\nconst Message: React.FC<{ message: ChatMessageType }> = React.memo(\r\n  ({ message }) => {\r\n    return (\r\n      <div>\r\n        <img src={message.photo} style={{ width: \"30px\" }} alt=\"avatar\" />\r\n        <b>{message.userName}</b>\r\n        <br />\r\n        {message.message}\r\n        <hr />\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nconst AddMessageForm: React.FC = () => {\r\n  const [message, setMessage] = useState(\"\");\r\n  const dispatch: AppDispatch = useDispatch();\r\n\r\n  const status = useSelector((state: AppStateType) => state.chat.status);\r\n\r\n  const sendMessageHandler = () => {\r\n    if (!message) return;\r\n    dispatch(sendMessage(message));\r\n    setMessage(\"\");\r\n  };\r\n  return (\r\n    <div>\r\n      <div>\r\n        <textarea\r\n          onChange={e => setMessage(e.currentTarget.value)}\r\n          value={message}\r\n        ></textarea>\r\n      </div>\r\n      <div>\r\n        <button disabled={status !== \"ready\"} onClick={sendMessageHandler}>\r\n          Send\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ChatPage;\r\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}"],"names":["Chat","dispatch","useDispatch","status","useSelector","state","chat","useEffect","startMessagesListening","stopMessagesListening","_jsxs","children","_jsx","Messages","AddMessageForm","_ref","obj","TypeError","_objectDestructuringEmpty","messages","messagesAncorRef","useRef","_useState","useState","_useState2","_slicedToArray","isAutoScroll","setIsAutoScroll","_messagesAncorRef$cur","current","scrollIntoView","behavior","style","height","overflowY","onScroll","e","element","currentTarget","Math","abs","scrollHeight","scrollTop","clientHeight","map","m","index","Message","message","id","ref","React","_ref2","src","photo","width","alt","userName","_useState3","_useState4","setMessage","onChange","value","disabled","onClick","sendMessage"],"sourceRoot":""}