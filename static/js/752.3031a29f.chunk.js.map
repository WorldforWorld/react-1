{"version":3,"file":"static/js/752.3031a29f.chunk.js","mappings":"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","sources":["webpack://react-1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://react-1/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","webpack://react-1/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__9ZCdZ\",\"posts\":\"MyPosts_posts__h7ZOW\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__lhgpN\"};","import classes from \"./Post.module.css\";\r\nconst Post = props => {\r\n  return (\r\n    <div className={classes.item}>\r\n      <img src=\"https://w7.pngwing.com/pngs/340/946/png-transparent-avatar-user-computer-icons-software-developer-avatar-child-face-heroes-thumbnail.png\" />\r\n      {props.message}\r\n      <div>\r\n        <span>like</span> {props.likesCount}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Post;\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport {\r\n  maxLenthCreator,\r\n  required,\r\n} from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FomsControls/FormsControls\";\r\nimport classes from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\n\r\nconst MyPosts = React.memo(props => {\r\n  console.log(\"render\");\r\n  const postsElements = [...props.posts]\r\n    .reverse()\r\n    .map(p => (\r\n      <Post message={p.message} likesCount={p.likesCount} key={p.id} />\r\n    ));\r\n  const onAddPost = values => {\r\n    props.addPost(values.newPostText);\r\n  };\r\n  return (\r\n    <div className={classes.postsBlock}>\r\n      <h3>My postst</h3>\r\n      <AddNewPostForm onSubmit={onAddPost} />\r\n      <div className={classes.posts}>{postsElements}</div>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst maxLength10 = maxLenthCreator(10);\r\nlet AddNewPostForm = props => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          name=\"newPostText\"\r\n          component={Textarea}\r\n          placeholder=\"Post message\"\r\n          validate={[required, maxLength10]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Add Post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nAddNewPostForm = reduxForm({ form: \"ProfileAddNewPostForm\" })(AddNewPostForm);\r\nexport default MyPosts;\r\n","import { connect } from \"react-redux\";\r\nimport { addPostActionCreator } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addPost: newPostText => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    },\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\nexport default MyPostsContainer;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__6-Eiz\",\"mainPhoto\":\"ProfileInfo_mainPhoto__8hJhm\",\"contact\":\"ProfileInfo_contact__s5uq5\"};","import { reduxForm } from \"redux-form\";\r\nimport {\r\n  Input,\r\n  Textarea,\r\n  createField,\r\n} from \"../../common/FomsControls/FormsControls\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <button>save</button>\r\n      </div>\r\n      {error && <div className={s.formSummaryError}>{error}</div>}\r\n      <div>\r\n        <b>Full name</b>: {createField(\"Full name\", \"fullName\", [], Input)}\r\n      </div>\r\n      <div>\r\n        <b>Looking fro a job</b>:{\" \"}\r\n        {createField(\"\", \"lookingForAJob\", [], Input, { type: \"checkbox\" })}\r\n      </div>\r\n      <div>\r\n        <b>My professional skills</b> :\r\n        {createField(\r\n          \"My professional skills\",\r\n          \"lookingForAJobDescription\",\r\n          [],\r\n          Textarea\r\n        )}\r\n      </div>\r\n      <div>\r\n        <b>About me</b>:{createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n      </div>\r\n      <div>\r\n        <b>Contacts</b>:{\" \"}\r\n        {Object.keys(profile.contacts).map(key => {\r\n          return (\r\n            <div className={s.contact} key={key}>\r\n              <b>{key}</b>: {createField(key, \"contacts.\" + key, [], Input)}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nconst ProfileDataFormReduxForm = reduxForm({ form: \"edit-profile\" })(\r\n  ProfileDataForm\r\n);\r\nexport default ProfileDataFormReduxForm;\r\n","import React, { useEffect, useState } from \"react\";\r\nconst ProfileStatusWithHooks = props => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n  const onStatusChange = e => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n  return (\r\n    <>\r\n      {!editMode && (\r\n        <div onDoubleClick={activateEditMode}>\r\n          <b>Status</b>: <span>{props.status || \"No status\"} </span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            onChange={onStatusChange}\r\n            onBlur={deactivateEditMode}\r\n            autoFocus={true}\r\n            value={status}\r\n          />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default ProfileStatusWithHooks;\r\n","import { useState } from \"react\";\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nconst ProfileInfo = props => {\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  if (!props.profile) {\r\n    return <Preloader />;\r\n  }\r\n  const onMainPhotoSelected = e => {\r\n    if (e.target.files.length) {\r\n      props.savePhoto(e.target.files[0]);\r\n    }\r\n  };\r\n  const onSubmit = formData => {\r\n    props.saveProfile(formData).then(() => {\r\n      setEditMode(false);\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <div className={s.descriptionBlock}>\r\n        <img\r\n          src={props.profile.photos.large || userPhoto}\r\n          alt=\"photos\"\r\n          className={s.mainPhoto}\r\n        />\r\n        {props.isOwner && <input type=\"file\" onChange={onMainPhotoSelected} />}\r\n        {editMode ? (\r\n          <ProfileDataForm\r\n            initialValues={props.profile}\r\n            profile={props.profile}\r\n            onSubmit={onSubmit}\r\n          />\r\n        ) : (\r\n          <ProfileData\r\n            goToEditMode={() => {\r\n              setEditMode(true);\r\n            }}\r\n            profile={props.profile}\r\n            isOwner={props.isOwner}\r\n          />\r\n        )}\r\n        <ProfileStatusWithHooks\r\n          status={props.status}\r\n          updateStatus={props.updateStatus}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n  return (\r\n    <div>\r\n      {isOwner && (\r\n        <div>\r\n          <button onClick={goToEditMode}>edit</button>\r\n        </div>\r\n      )}\r\n      <div>\r\n        <b>Full name</b>:{profile.fullName}\r\n      </div>\r\n      <div>\r\n        <b>Looking fro a job</b>:{profile.lookingForAJob ? \"yes\" : \"no\"}\r\n      </div>\r\n      {profile.lookingForAJob && (\r\n        <div>\r\n          <b>My professional skills</b> :{profile.lookingForAJobDescription}\r\n        </div>\r\n      )}\r\n      <div>\r\n        <b>About me</b>: {profile.aboutMe}\r\n      </div>\r\n      <div>\r\n        <b>Contacts</b>:{\" \"}\r\n        {Object.keys(profile.contacts).map(key => {\r\n          return (\r\n            <Contact\r\n              key={key}\r\n              contactTitle={key}\r\n              contactValue={profile.contacts[key]}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n  return (\r\n    <div className={s.contact}>\r\n      <b>{contactTitle}</b>: {contactValue}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nconst Profile = props => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo\r\n        isOwner={props.isOwner}\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n        savePhoto={props.savePhoto}\r\n        saveProfile={props.saveProfile}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport {\r\n  getStatus,\r\n  getUserProfile,\r\n  savePhoto,\r\n  saveProfile,\r\n  updateStatus,\r\n} from \"../../redux/profile-reducer\";\r\nimport Profile from \"./Profile\";\r\nexport function withRouter(Children) {\r\n  return props => {\r\n    const match = { params: useParams() };\r\n    return <Children {...props} match={match} />;\r\n  };\r\n}\r\nclass ProfileContainer extends React.Component {\r\n  refreshProfile() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.autorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        isOwner={!this.props.match.params.userId}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n        savePhoto={this.props.savePhoto}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  autorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth,\r\n});\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getUserProfile,\r\n    getStatus,\r\n    updateStatus,\r\n    savePhoto,\r\n    saveProfile,\r\n  }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nconst mapStateToPropsFroRedirect = state => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\nexport const withAuthRedirect = Component => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Navigate to={\"/login\"} />;\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n  const connectedAuthRedirectComponent = connect(mapStateToPropsFroRedirect)(\r\n    RedirectComponent\r\n  );\r\n  return connectedAuthRedirectComponent;\r\n};\r\n"],"names":["props","_jsxs","className","classes","children","_jsx","src","message","likesCount","MyPosts","React","console","log","postsElements","_toConsumableArray","posts","reverse","map","p","Post","id","AddNewPostForm","onSubmit","values","addPost","newPostText","maxLength10","maxLenthCreator","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","reduxForm","form","connect","state","profilePage","dispatch","addPostActionCreator","_ref","profile","error","s","formSummaryError","createField","Input","type","Object","keys","contacts","key","contact","_useState","useState","_useState2","_slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","_Fragment","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Contact","contactTitle","contactValue","_ref2","Preloader","descriptionBlock","photos","large","userPhoto","alt","mainPhoto","target","files","length","savePhoto","ProfileDataForm","initialValues","formData","saveProfile","then","ProfileStatusWithHooks","ProfileInfo","MyPostsContainer","withRouter","Children","match","params","useParams","_objectSpread","ProfileContainer","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","userId","this","autorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Profile","compose","auth","isAuth","withAuthRedirect","mapStateToPropsFroRedirect","Component","RedirectComponent","Navigate","to"],"sourceRoot":""}