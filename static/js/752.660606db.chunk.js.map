{"version":3,"file":"static/js/752.660606db.chunk.js","mappings":"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","sources":["webpack://react-1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://react-1/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","webpack://react-1/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__9ZCdZ\",\"posts\":\"MyPosts_posts__h7ZOW\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__lhgpN\"};","import classes from \"./Post.module.css\";\r\nconst Post = props => {\r\n  return (\r\n    <div className={classes.item}>\r\n      <img src=\"https://w7.pngwing.com/pngs/340/946/png-transparent-avatar-user-computer-icons-software-developer-avatar-child-face-heroes-thumbnail.png\" />\r\n      {props.message}\r\n      <div>\r\n        <span>like</span> {props.likesCount}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Post;\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport {\r\n  maxLenthCreator,\r\n  required,\r\n} from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FomsControls/FormsControls\";\r\nimport classes from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\n\r\nconst MyPosts = React.memo(props => {\r\n  const postsElements = [...props.posts]\r\n    .reverse()\r\n    .map(p => (\r\n      <Post message={p.message} likesCount={p.likesCount} key={p.id} />\r\n    ));\r\n  const onAddPost = values => {\r\n    props.addPost(values.newPostText);\r\n  };\r\n  return (\r\n    <div className={classes.postsBlock}>\r\n      <h3>My postst</h3>\r\n      <AddNewPostForm onSubmit={onAddPost} />\r\n      <div className={classes.posts}>{postsElements}</div>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst maxLength10 = maxLenthCreator(10);\r\nlet AddNewPostForm = props => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          name=\"newPostText\"\r\n          component={Textarea}\r\n          placeholder=\"Post message\"\r\n          validate={[required, maxLength10]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Add Post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nAddNewPostForm = reduxForm({ form: \"ProfileAddNewPostForm\" })(AddNewPostForm);\r\nexport default MyPosts;\r\n","import { connect } from \"react-redux\";\r\nimport { addPostActionCreator } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addPost: newPostText => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    },\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\nexport default MyPostsContainer;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__6-Eiz\",\"mainPhoto\":\"ProfileInfo_mainPhoto__8hJhm\",\"contact\":\"ProfileInfo_contact__s5uq5\"};","import React from \"react\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport {\r\n  Input,\r\n  Textarea,\r\n  createField,\r\n} from \"../../common/FomsControls/FormsControls\";\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\nclass ProfileDataForm extends React.Component {\r\n  componentDidUpdate(prevProps) {\r\n    // Обработка обновления свойств\r\n    if (prevProps.profile !== this.props.profile) {\r\n      // Выполните здесь необходимые действия при обновлении свойств\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { handleSubmit, profile, error } = this.props;\r\n\r\n    return (\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <button>save</button>\r\n        </div>\r\n        {error && <div className={s.formSummaryError}>{error}</div>}\r\n        <div>\r\n          <b>Full name</b>: {createField(\"Full name\", \"fullName\", [], Input)}\r\n        </div>\r\n        <div>\r\n          <b>Looking for a job</b>:{\" \"}\r\n          {createField(\"\", \"lookingForAJob\", [], Input, { type: \"checkbox\" })}\r\n        </div>\r\n        <div>\r\n          <b>My professional skills</b> :\r\n          {createField(\r\n            \"My professional skills\",\r\n            \"lookingForAJobDescription\",\r\n            [],\r\n            Textarea\r\n          )}\r\n        </div>\r\n        <div>\r\n          <b>About me</b>:{createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n        </div>\r\n        <div>\r\n          <b>Contacts</b>:{\" \"}\r\n          {Object.keys(profile.contacts).map(key => {\r\n            return (\r\n              <div className={s.contact} key={key}>\r\n                <b>{key}</b>: {createField(key, \"contacts.\" + key, [], Input)}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({ form: \"edit-profile\" })(\r\n  ProfileDataForm\r\n);\r\n\r\nexport default ProfileDataFormReduxForm;\r\n","import React, { useEffect, useState } from \"react\";\r\nconst ProfileStatusWithHooks = props => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n  const onStatusChange = e => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n  return (\r\n    <>\r\n      {!editMode && (\r\n        <div onDoubleClick={activateEditMode}>\r\n          <b>Status</b>: <span>{props.status || \"No status\"} </span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            onChange={onStatusChange}\r\n            onBlur={deactivateEditMode}\r\n            autoFocus={true}\r\n            value={status}\r\n          />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default ProfileStatusWithHooks;\r\n","import { useState } from \"react\";\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nconst ProfileInfo = props => {\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  if (!props.profile) {\r\n    return <Preloader />;\r\n  }\r\n  const onMainPhotoSelected = e => {\r\n    if (e.target.files.length) {\r\n      props.savePhoto(e.target.files[0]);\r\n    }\r\n  };\r\n  const onSubmit = formData => {\r\n    props.saveProfile(formData).then(() => {\r\n      setEditMode(false);\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <div className={s.descriptionBlock}>\r\n        <img\r\n          src={props.profile.photos.large || userPhoto}\r\n          alt=\"photos\"\r\n          className={s.mainPhoto}\r\n        />\r\n        {props.isOwner && <input type=\"file\" onChange={onMainPhotoSelected} />}\r\n        {editMode ? (\r\n          <ProfileDataForm\r\n            initialValues={props.profile}\r\n            profile={props.profile}\r\n            onSubmit={onSubmit}\r\n          />\r\n        ) : (\r\n          <ProfileData\r\n            goToEditMode={() => {\r\n              setEditMode(true);\r\n            }}\r\n            profile={props.profile}\r\n            isOwner={props.isOwner}\r\n          />\r\n        )}\r\n        <ProfileStatusWithHooks\r\n          status={props.status}\r\n          updateStatus={props.updateStatus}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n  return (\r\n    <div>\r\n      {isOwner && (\r\n        <div>\r\n          <button onClick={goToEditMode}>edit</button>\r\n        </div>\r\n      )}\r\n      <div>\r\n        <b>Full name</b>:{profile.fullName}\r\n      </div>\r\n      <div>\r\n        <b>Looking fro a job</b>:{profile.lookingForAJob ? \"yes\" : \"no\"}\r\n      </div>\r\n      {profile.lookingForAJob && (\r\n        <div>\r\n          <b>My professional skills</b> :{profile.lookingForAJobDescription}\r\n        </div>\r\n      )}\r\n      <div>\r\n        <b>About me</b>: {profile.aboutMe}\r\n      </div>\r\n      <div>\r\n        <b>Contacts</b>:{\" \"}\r\n        {Object.keys(profile.contacts).map(key => {\r\n          return (\r\n            <Contact\r\n              key={key}\r\n              contactTitle={key}\r\n              contactValue={profile.contacts[key]}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n  return (\r\n    <div className={s.contact}>\r\n      <b>{contactTitle}</b>: {contactValue}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nconst Profile = props => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo\r\n        isOwner={props.isOwner}\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n        savePhoto={props.savePhoto}\r\n        saveProfile={props.saveProfile}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport {\r\n  getStatus,\r\n  getUserProfile,\r\n  savePhoto,\r\n  saveProfile,\r\n  updateStatus,\r\n} from \"../../redux/profile-reducer\";\r\nimport Profile from \"./Profile\";\r\nexport function withRouter(Children) {\r\n  return props => {\r\n    const match = { params: useParams() };\r\n    return <Children {...props} match={match} />;\r\n  };\r\n}\r\nclass ProfileContainer extends React.Component {\r\n  refreshProfile() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.autorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        isOwner={!this.props.match.params.userId}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n        savePhoto={this.props.savePhoto}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  autorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth,\r\n});\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getUserProfile,\r\n    getStatus,\r\n    updateStatus,\r\n    savePhoto,\r\n    saveProfile,\r\n  }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nconst mapStateToPropsFroRedirect = state => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\nexport const withAuthRedirect = Component => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Navigate to={\"/login\"} />;\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n  const connectedAuthRedirectComponent = connect(mapStateToPropsFroRedirect)(\r\n    RedirectComponent\r\n  );\r\n  return connectedAuthRedirectComponent;\r\n};\r\n"],"names":["props","_jsxs","className","classes","children","_jsx","src","message","likesCount","MyPosts","React","postsElements","_toConsumableArray","posts","reverse","map","p","Post","id","AddNewPostForm","onSubmit","values","addPost","newPostText","maxLength10","maxLenthCreator","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","reduxForm","form","connect","state","profilePage","dispatch","addPostActionCreator","ProfileDataForm","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","prevProps","profile","this","_this$props","error","s","formSummaryError","createField","Input","type","Object","keys","contacts","contact","_useState","useState","_useState2","_slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","_Fragment","onDoubleClick","onChange","e","currentTarget","onBlur","updateStatus","autoFocus","ProfileData","_ref","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Contact","contactTitle","contactValue","_ref2","Preloader","descriptionBlock","photos","large","userPhoto","alt","mainPhoto","target","files","length","savePhoto","initialValues","formData","saveProfile","then","ProfileStatusWithHooks","ProfileInfo","MyPostsContainer","withRouter","Children","match","params","useParams","_objectSpread","ProfileContainer","userId","autorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevState","snapshot","Profile","compose","auth","isAuth","withAuthRedirect","mapStateToPropsFroRedirect","Component","RedirectComponent","Navigate","to"],"sourceRoot":""}