{"version":3,"file":"static/js/366.510c08c4.chunk.js","mappings":"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","sources":["components/Dialogs/AddMessageForm/AddMessageForm.jsx","webpack://react-1/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Dialogs.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["import { Field, reduxForm } from \"redux-form\";\r\nimport {\r\n  maxLenthCreator,\r\n  required,\r\n} from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FomsControls/FormsControls\";\r\n\r\nconst maxLength50 = maxLenthCreator(50);\r\nconst AddmessageForm = props => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          component={Textarea}\r\n          validate={[required, maxLength50]}\r\n          name=\"newMessageBody\"\r\n          placeholder=\"Enter your message\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Send</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nexport default reduxForm({ form: \"AddmessageForm\" })(AddmessageForm);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__MvfVz\",\"dialogsItems\":\"Dialogs_dialogsItems__wgbzJ\",\"active\":\"Dialogs_active__jmu0Y\",\"messages\":\"Dialogs_messages__2Fh1N\",\"message\":\"Dialogs_message__9DV5Z\"};","import { NavLink } from \"react-router-dom\";\r\nimport s from \"../Dialogs.module.css\";\r\nconst DialogItem = props => {\r\n  return (\r\n    <div className={s.dialog + \" \" + s.active}>\r\n      <NavLink to={`/dialog/${props.id}`}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","import s from \"../Dialogs.module.css\";\r\nconst Message = props => {\r\n  return <div className={s.message}>{props.message}</div>;\r\n};\r\nexport default Message;\r\n","import { Navigate } from \"react-router-dom\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport Message from \"./Message/Dialogs\";\r\n\r\nconst Dialogs = props => {\r\n  const state = props.dialogsPage;\r\n\r\n  const dialogsElements = state.dialogs.map(d => (\r\n    <DialogItem name={d.name} id={d.id} key={d.id} />\r\n  ));\r\n\r\n  const messagesElements = state.messages.map(m => (\r\n    <Message message={m.message} key={m.id} />\r\n  ));\r\n\r\n  const addNewMessage = values => {\r\n    props.sendMessage(values.newMessageBody);\r\n  };\r\n  if (!props.isAuth) return <Navigate to={\"/login\"} />;\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>{dialogsElements}</div>\r\n      <div className={s.messages}>\r\n        <div>{messagesElements}</div>\r\n        <div>\r\n          <AddMessageForm onSubmit={addNewMessage} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Dialogs;\r\n","import { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { sendMessageCreator } from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    sendMessage: newMessageBody => {\r\n      dispatch(sendMessageCreator(newMessageBody));\r\n    },\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nconst mapStateToPropsFroRedirect = state => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\nexport const withAuthRedirect = Component => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Navigate to={\"/login\"} />;\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n  const connectedAuthRedirectComponent = connect(mapStateToPropsFroRedirect)(\r\n    RedirectComponent\r\n  );\r\n  return connectedAuthRedirectComponent;\r\n};\r\n"],"names":["maxLength50","maxLenthCreator","reduxForm","form","props","_jsxs","onSubmit","handleSubmit","children","_jsx","Field","component","Textarea","validate","required","name","placeholder","className","s","dialog","active","NavLink","to","concat","id","message","state","dialogsPage","dialogsElements","dialogs","map","d","DialogItem","messagesElements","messages","m","Message","isAuth","dialogsItems","AddMessageForm","values","sendMessage","newMessageBody","Navigate","compose","connect","dispatch","sendMessageCreator","withAuthRedirect","Dialogs","mapStateToPropsFroRedirect","auth","Component","RedirectComponent","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","this","_objectSpread","React"],"sourceRoot":""}